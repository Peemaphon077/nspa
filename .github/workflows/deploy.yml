name: CI/CD (Build & Deploy to Vercel)

on:
  push:
    branches: [ "main" ]   # ‡∏õ‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚§µÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      # ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö package.json ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
      - name: üß™ Typecheck (tsc -b)
        run: npx tsc -b

      - name: üßπ Lint (optional)
        run: npm run lint || true

      # ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö script: "build": "tsc -b && vite build"
      - name: üèóÔ∏è Build (Vite)
        run: npm run build

      - name: ‚¨áÔ∏è Install Vercel CLI
        run: npm i -g vercel@latest

      # ‡∏î‡∏∂‡∏á binding ‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏à‡∏≤‡∏Å Vercel (‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .vercel/project.json ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß)
      - name: üîê Pull Vercel Project Settings
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á deploy ‡πÑ‡∏î‡πâ 2 ‡πÅ‡∏ö‡∏ö (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏ö‡∏ö A ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ú‡∏• build ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤)

      # A) ‡πÉ‡∏ä‡πâ‡∏ú‡∏• build ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô (‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô)
      - name: üöÄ Deploy to Vercel (use prebuilt)
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      # B) ‡πÉ‡∏´‡πâ Vercel build ‡πÄ‡∏≠‡∏á‡∏ö‡∏ô‡∏Ñ‡∏•‡∏≤‡∏ß‡∏î‡πå (‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤ ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢)
      # - name: üöÄ Deploy to Vercel (let Vercel build)
      #   run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
